{
  "version": 3,
  "sources": ["../../@mui/x-tree-view/TreeItem2Icon/TreeItem2Icon.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport resolveComponentProps from '@mui/utils/resolveComponentProps';\r\nimport useSlotProps from '@mui/utils/useSlotProps';\r\nimport { useTreeViewContext } from \"../internals/TreeViewProvider/index.js\";\r\nimport { TreeViewCollapseIcon, TreeViewExpandIcon } from \"../icons/index.js\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nfunction TreeItem2Icon(props) {\r\n  const {\r\n    slots,\r\n    slotProps,\r\n    status\r\n  } = props;\r\n  const context = useTreeViewContext();\r\n  const contextIcons = _extends({}, context.icons.slots, {\r\n    expandIcon: context.icons.slots.expandIcon ?? TreeViewExpandIcon,\r\n    collapseIcon: context.icons.slots.collapseIcon ?? TreeViewCollapseIcon\r\n  });\r\n  const contextIconProps = context.icons.slotProps;\r\n  let iconName;\r\n  if (slots?.icon) {\r\n    iconName = 'icon';\r\n  } else if (status.expandable) {\r\n    if (status.expanded) {\r\n      iconName = 'collapseIcon';\r\n    } else {\r\n      iconName = 'expandIcon';\r\n    }\r\n  } else {\r\n    iconName = 'endIcon';\r\n  }\r\n  const Icon = slots?.[iconName] ?? contextIcons[iconName];\r\n  const iconProps = useSlotProps({\r\n    elementType: Icon,\r\n    externalSlotProps: tempOwnerState => _extends({}, resolveComponentProps(contextIconProps[iconName], tempOwnerState), resolveComponentProps(slotProps?.[iconName], tempOwnerState)),\r\n    // TODO: Add proper ownerState\r\n    ownerState: {}\r\n  });\r\n  if (!Icon) {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/_jsx(Icon, _extends({}, iconProps));\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? TreeItem2Icon.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The props used for each component slot.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.object,\r\n  /**\r\n   * Overridable component slots.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.object,\r\n  status: PropTypes.shape({\r\n    disabled: PropTypes.bool.isRequired,\r\n    editable: PropTypes.bool.isRequired,\r\n    editing: PropTypes.bool.isRequired,\r\n    expandable: PropTypes.bool.isRequired,\r\n    expanded: PropTypes.bool.isRequired,\r\n    focused: PropTypes.bool.isRequired,\r\n    selected: PropTypes.bool.isRequired\r\n  }).isRequired\r\n} : void 0;\r\nexport { TreeItem2Icon };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,YAAuB;AACvB,wBAAsB;AAKtB,yBAA4B;AAC5B,SAAS,cAAc,OAAO;AAC5B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,UAAU,mBAAmB;AACnC,QAAM,eAAe,SAAS,CAAC,GAAG,QAAQ,MAAM,OAAO;AAAA,IACrD,YAAY,QAAQ,MAAM,MAAM,cAAc;AAAA,IAC9C,cAAc,QAAQ,MAAM,MAAM,gBAAgB;AAAA,EACpD,CAAC;AACD,QAAM,mBAAmB,QAAQ,MAAM;AACvC,MAAI;AACJ,MAAI,+BAAO,MAAM;AACf,eAAW;AAAA,EACb,WAAW,OAAO,YAAY;AAC5B,QAAI,OAAO,UAAU;AACnB,iBAAW;AAAA,IACb,OAAO;AACL,iBAAW;AAAA,IACb;AAAA,EACF,OAAO;AACL,eAAW;AAAA,EACb;AACA,QAAM,QAAO,+BAAQ,cAAa,aAAa,QAAQ;AACvD,QAAM,YAAY,qBAAa;AAAA,IAC7B,aAAa;AAAA,IACb,mBAAmB,oBAAkB,SAAS,CAAC,GAAG,8BAAsB,iBAAiB,QAAQ,GAAG,cAAc,GAAG,8BAAsB,uCAAY,WAAW,cAAc,CAAC;AAAA;AAAA,IAEjL,YAAY,CAAC;AAAA,EACf,CAAC;AACD,MAAI,CAAC,MAAM;AACT,WAAO;AAAA,EACT;AACA,aAAoB,mBAAAA,KAAK,MAAM,SAAS,CAAC,GAAG,SAAS,CAAC;AACxD;AACA,OAAwC,cAAc,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAShE,WAAW,kBAAAC,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrB,OAAO,kBAAAA,QAAU;AAAA,EACjB,QAAQ,kBAAAA,QAAU,MAAM;AAAA,IACtB,UAAU,kBAAAA,QAAU,KAAK;AAAA,IACzB,UAAU,kBAAAA,QAAU,KAAK;AAAA,IACzB,SAAS,kBAAAA,QAAU,KAAK;AAAA,IACxB,YAAY,kBAAAA,QAAU,KAAK;AAAA,IAC3B,UAAU,kBAAAA,QAAU,KAAK;AAAA,IACzB,SAAS,kBAAAA,QAAU,KAAK;AAAA,IACxB,UAAU,kBAAAA,QAAU,KAAK;AAAA,EAC3B,CAAC,EAAE;AACL,IAAI;",
  "names": ["_jsx", "PropTypes"]
}
